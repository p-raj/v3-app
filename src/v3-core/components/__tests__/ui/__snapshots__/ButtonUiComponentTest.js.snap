exports[`Suite for testing button component: renders button on android as expected (matches the snapshot) 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Unknown
    background={undefined}
    onPress={[Function]}>
    <View
        style={
            Object {
                "alignItems": "center",
                "backgroundColor": "#FFF",
                "borderColor": "#000",
                "borderRadius": 24,
                "borderStyle": "solid",
                "borderWidth": 2,
                "height": 50,
                "justifyContent": "center",
                "margin": 10,
                "width": 50,
              }
        }>
        <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                Object {
                    "color": "#000",
                  }
            }>
            BUTTON
        </Text>
    </View>
</Unknown>,
  "nodes": Array [
    <Unknown
      background={undefined}
      onPress={[Function]}>
      <View
            style={
                  Object {
                        "alignItems": "center",
                        "backgroundColor": "#FFF",
                        "borderColor": "#000",
                        "borderRadius": 24,
                        "borderStyle": "solid",
                        "borderWidth": 2,
                        "height": 50,
                        "justifyContent": "center",
                        "margin": 10,
                        "width": 50,
                      }
            }>
            <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                        Object {
                              "color": "#000",
                            }
                  }>
                  BUTTON
            </Text>
      </View>
</Unknown>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <CustomButton
        onPress={[Function]}
        style={
                Object {
                        "height": 50,
                        "width": 50,
                      }
        }
        title="Button" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": CustomButton {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "onPress": [Function],
          "style": Object {
            "height": 50,
            "width": 50,
          },
          "title": "Button",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Unknown
          background={undefined}
          onPress={[Function]}>
          <View
                    style={
                              Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#FFF",
                                        "borderColor": "#000",
                                        "borderRadius": 24,
                                        "borderStyle": "solid",
                                        "borderWidth": 2,
                                        "height": 50,
                                        "justifyContent": "center",
                                        "margin": 10,
                                        "width": 50,
                                      }
                    }>
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Object {
                                                  "color": "#000",
                                                }
                              }>
                              BUTTON
                    </Text>
          </View>
</Unknown>,
        "_debugID": 2,
        "_renderedOutput": <Unknown
          background={undefined}
          onPress={[Function]}>
          <View
                    style={
                              Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#FFF",
                                        "borderColor": "#000",
                                        "borderRadius": 24,
                                        "borderStyle": "solid",
                                        "borderWidth": 2,
                                        "height": 50,
                                        "justifyContent": "center",
                                        "margin": 10,
                                        "width": 50,
                                      }
                    }>
                    <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                        Object {
                                                  "color": "#000",
                                                }
                              }>
                              BUTTON
                    </Text>
          </View>
</Unknown>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CustomButton
    onPress={[Function]}
    style={
        Object {
            "height": 50,
            "width": 50,
          }
    }
    title="Button" />,
}
`;

exports[`Suite for testing button component: renders button on iOS as expected (matches the snapshot) 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hitSlop={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}>
  <View
    style={
      Array [
        Object {},
      ]
    }>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#0C42FD",
            "fontSize": 18,
            "padding": 8,
            "textAlign": "center",
          },
        ]
      }>
      Button
    </Text>
  </View>
</View>
`;

exports[`Suite for testing button component: renders button on web as expected (matches the snapshot) 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hitSlop={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFF",
      "borderColor": "#000",
      "borderRadius": 24,
      "borderStyle": "solid",
      "borderWidth": 2,
      "height": 50,
      "justifyContent": "center",
      "margin": 10,
      "opacity": 1,
      "width": 50,
    }
  }
  testID={undefined}>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "color": "#000",
      }
    }>
    BUTTON
  </Text>
</View>
`;
